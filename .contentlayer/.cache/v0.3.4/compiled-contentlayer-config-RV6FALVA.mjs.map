{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport rehypeSlug from \"rehype-slug\";\nimport remarkGfm from \"remark-gfm\";\nimport rehypePrettyCode from \"rehype-pretty-code\";\nimport { title } from \"process\";\n\n/** @type {import('contentlayer/source-files').ComputedFields} */\nconst computedFields = {\n  slug: {\n    type: \"string\",\n    resolve: (doc) => `/${doc._raw.flattenedPath}/`,\n  },\n  slugAsParams: {\n    type: \"string\",\n    resolve: (doc) => doc._raw.flattenedPath.split(\"/\").slice(1).join(\"/\"),\n  },\n};\n\nexport const Doc = defineDocumentType(() => ({\n  name: \"Doc\",\n  filePathPattern: `docs/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      required: true,\n    },\n    eventType: {\n      type: \"string\",\n      required: true,\n    },\n    published: {\n      type: \"boolean\",\n      default: true,\n    },\n  },\n  computedFields\n}));\n\n\nexport default makeSource({\n    contentDirPath: 'app/content',\n    documentTypes: [Doc],\n    mdx: {\n         remarkPlugins: [remarkGfm],\n         rehypePlugins: [\n                rehypeSlug,\n                [\n                    rehypePrettyCode,\n                    {\n                        theme: 'github-dark',\n                        onVisitLine(node){\n                            if(node.children.length === 0){\n                                node.children = [{type: 'text', value: ' '}]\n                            }\n                        },\n                        onVisitHighlightedLine(node){\n                            node.properties.className.push('line--higlighted')\n                        },\n                        onVisitHighlightedWord(node){\n                            node.properties.className = ['word--highlighted']\n                        }\n                    }\n                ],\n                [\n                    rehypeAutolinkHeadings,{\n                        properties: {\n                            className: ['subheading-anchor'],\n                            ariaLabel: 'link to section ',\n                        }\n                    }\n                ]\n         ]\n    }\n})"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,4BAA4B;AACnC,OAAO,gBAAgB;AACvB,OAAO,eAAe;AACtB,OAAO,sBAAsB;AAC7B,SAAS,aAAa;AAGtB,IAAM,iBAAiB;AAAA,EACrB,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa;AAAA,EAC9C;AAAA,EACA,cAAc;AAAA,IACZ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,EACvE;AACF;AAEO,IAAM,MAAM,mBAAmB,OAAO;AAAA,EAC3C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,EACF;AAAA,EACA;AACF,EAAE;AAGF,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,GAAG;AAAA,EACnB,KAAK;AAAA,IACA,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACR;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,UACI,OAAO;AAAA,UACP,YAAY,MAAK;AACb,gBAAG,KAAK,SAAS,WAAW,GAAE;AAC1B,mBAAK,WAAW,CAAC,EAAC,MAAM,QAAQ,OAAO,IAAG,CAAC;AAAA,YAC/C;AAAA,UACJ;AAAA,UACA,uBAAuB,MAAK;AACxB,iBAAK,WAAW,UAAU,KAAK,kBAAkB;AAAA,UACrD;AAAA,UACA,uBAAuB,MAAK;AACxB,iBAAK,WAAW,YAAY,CAAC,mBAAmB;AAAA,UACpD;AAAA,QACJ;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QAAuB;AAAA,UACnB,YAAY;AAAA,YACR,WAAW,CAAC,mBAAmB;AAAA,YAC/B,WAAW;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACP;AAAA,EACL;AACJ,CAAC;",
  "names": []
}
